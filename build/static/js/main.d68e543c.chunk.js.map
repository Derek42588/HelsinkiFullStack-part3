{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","newFilter","onChange","handleFilterChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","removePersonHandler","name","number","onClick","Persons","personsToShow","persons","filter","toLowerCase","includes","map","key","id","baseUrl","axios","get","then","response","data","newObject","post","delete","personObject","put","Notification","message","messageType","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","setMessageType","useEffect","personsService","initialPeople","event","target","preventDefault","p","console","log","window","confirm","find","changedPerson","returnedPerson","setTimeout","catch","error","alert","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d68e543c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n            <div>\r\n            filter shown with <input \r\n            value = {props.newFilter}\r\n            onChange = {props.handleFilterChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit = {props.addPerson}>\r\n                <div>\r\n                name: \r\n                <input\r\n                value = {props.newName} \r\n                onChange = {props.handleNameChange}\r\n                />\r\n                </div>\r\n                <div>\r\n                number: \r\n                <input\r\n                value = {props.newNumber} \r\n                onChange = {props.handleNumberChange}\r\n                />\r\n                </div>\r\n                <div>\r\n                <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({person, removePersonHandler}) => {\r\n    return (\r\n    <li> {person.name} {person.number} <button onClick = {removePersonHandler}>delete</button></li>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst Persons = (props) => {\r\n\r\n    const personsToShow = (props.newFilter === '')\r\n? props.persons\r\n: props.persons.filter(person => person.name.toLowerCase().includes(props.newFilter.toLowerCase()))\r\n\r\nconst rows = () => personsToShow.map( person => \r\n  <Person key = {person.name} person = {person} removePersonHandler = {() => props.removePersonHandler(person.id, person.name)} />\r\n  )\r\n\r\n    return (\r\n        <div>\r\n            {rows()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst removePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, personObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, personObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, removePerson, update}\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, messageType }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={messageType}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ message, setMessage] = useState(null)\n  const [ messageType, setMessageType] = useState('')\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPeople => {\n        setPersons(initialPeople)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const removePersonHandler = ( id, name ) => {\n    const confirmation = window.confirm(`Delete ${name} ?`)\n\n    if (confirmation) {\n\n    personsService\n    .removePerson(id)\n    .then(() => {\n      setMessageType('success')\n      setMessage(\n          `Removed ${name} from phonebook`\n        )\n      setTimeout(() => {\n            setMessage(null)\n        }, 5000)\n      setPersons(persons.filter(p => p.id !== id))\n      setNewName('')\n      setNewNumber('')\n\n    })\n    .catch(error => {\n      setMessage(`Information of ${name} has already been removed from server`)\n      setMessageType('error')\n      setTimeout(() => {\n        setMessage(null)\n    }, 5000)\n      setPersons(persons.filter(p => p.id !== id))\n    })\n    \n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const names = persons.map(p => p.name)\n\n    if (names.includes(newName)) {\n      console.log(\"have one\")\n      // alert(`${newName} is already in the phonebook`)\n      // setNewName('')\n      const confirmation = window.confirm (`${newName} is already in the phonebook, replace the old number with a new one?`)\n\n      if (confirmation) {\n        const person = persons.find(p => p.name === newName)\n        const changedPerson = {...person, number:newNumber}\n\n        personsService\n        .update(person.id, changedPerson)\n        .then(returnedPerson => {\n          setMessageType('success')\n          setMessage(\n          `Changed ${changedPerson.name}'s number to ${changedPerson.number}`\n        )\n          setTimeout(() => {\n            setMessage(null)\n        }, 5000)\n          setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n            setMessage(`Information of ${changedPerson.name} has already been removed from server`)\n            setMessageType('error')\n            setTimeout(() => {\n              setMessage(null)\n          }, 5000)\n          setPersons(persons.filter(p => p.name !== changedPerson.name))\n        })\n      }\n    }\n    else if (newName === '') {\n      alert('You must enter a name!')\n    }\n    else if (newNumber === '') {\n      alert('You must enter a number!')\n    }\n    else {\n    // setPersons(persons.concat(personObject))\n    // setNewName('')\n    // setNewNumber('')\n\n    personsService\n      .create(personObject)\n      .then(returnedPerson => {\n        setMessageType('success')\n        setMessage(\n          `Added ${personObject.name}`\n        )\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n      })\n    }\n  }\n\n  \n \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message = {message} messageType = {messageType}/>\n\n     <Filter \n      newFilter = {newFilter}\n      handleFilterChange = {handleFilterChange}\n     />\n      <h3>add a new</h3>\n\n      <PersonForm \n        addPerson = {addPerson}\n        newName = {newName}\n        handleNameChange = {handleNameChange}\n        newNumber = {newNumber}\n        handleNumberChange = {handleNumberChange}\n      />\n        \n      <h2>Numbers</h2>\n      <Persons \n      persons = {persons}\n      newFilter = {newFilter}\n      removePersonHandler = {removePersonHandler}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}